version: "3.8"

services:
  # Production Services
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - my_network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  web-stage:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "3001:3000" # Use a different port
    environment:
      - NODE_ENV=test
    depends_on:
      - db-stage
    networks:
      - my_network_stage

  db-stage:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_STAGE}
    ports:
      - "5433:5432" # Use a different port
    volumes:
      - postgres_data_stage:/var/lib/postgresql/data
    networks:
      - my_network_stage

  web-development:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000" # Use a different port
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
    depends_on:
      - db-stage
    networks:
      - my_network_stage

volumes:
  postgres_data:
  postgres_data_stage:

networks:
  my_network:
    driver: bridge
  my_network_stage:
    driver: bridge
